Terminals unused in grammar

    TOKEN_OROP
    TOKEN_NOTOP
    TOKEN_SUBTRACT
    TOKEN_DIVIDE
    TOKEN_MODOP
    TOKEN_EXPOP
    TOKEN_NEGOP
    ELSE
    FOLD
    ENDFOLD
    IF
    THEN
    LEFT
    RIGHT
    ELSIF
    ENDIF


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS expression ';'
    9         | IDENTIFIER ':' LIST OF type IS list ';'

   10 list: '(' expressions ')'

   11 expressions: expressions ',' expression
   12            | expression

   13 body: BEGIN_ statement_ END

   14 statement_: statement ';'
   15           | statement_ statement ';'
   16           | error ';'

   17 statement: expression
   18          | WHEN condition ',' expression ':' expression
   19          | SWITCH expression IS cases OTHERS ARROW statement ENDSWITCH

   20 cases: cases case
   21      | ε

   22 case: CASE INT_LITERAL ARROW statement ';'

   23 condition: condition ANDOP relation
   24          | relation

   25 relation: '(' condition ')'
   26         | expression RELOP expression

   27 expression: expression ADDOP term
   28           | term

   29 term: term MULOP primary
   30     | primary

   31 primary: '(' expression ')'
   32        | INT_LITERAL
   33        | CHAR_LITERAL
   34        | REAL_LITERAL
   35        | HEX_LITERAL
   36        | IDENTIFIER '(' expression ')'
   37        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 25 31 36
    ')' (41) 10 25 31 36
    ',' (44) 11 18
    ':' (58) 8 9 18
    ';' (59) 1 2 8 9 14 15 16 22
    error (256) 16
    IDENTIFIER <iden> (258) 2 8 9 36 37
    INT_LITERAL <ival> (259) 22 32
    HEX_LITERAL <ival> (260) 35
    REAL_LITERAL <rval> (261) 34
    CHAR_LITERAL <cval> (262) 33
    ADDOP <oper> (263) 27
    MULOP <oper> (264) 29
    ANDOP <oper> (265) 23
    RELOP <oper> (266) 26
    TOKEN_OROP <oper> (267)
    TOKEN_NOTOP <oper> (268)
    TOKEN_SUBTRACT <oper> (269)
    TOKEN_DIVIDE <oper> (270)
    TOKEN_MODOP <oper> (271)
    TOKEN_EXPOP <oper> (272)
    TOKEN_NEGOP <oper> (273)
    ARROW (274) 19 22
    BEGIN_ (275) 13
    CASE (276) 22
    CHARACTER (277) 4
    ELSE (278)
    END (279) 13
    ENDSWITCH (280) 19
    FUNCTION (281) 2
    INTEGER (282) 3
    IS (283) 8 9 19
    LIST (284) 9
    OF (285) 9
    OTHERS (286) 19
    RETURNS (287) 2
    SWITCH (288) 19
    WHEN (289) 18
    REAL (290) 5
    FOLD (291)
    ENDFOLD (292)
    IF (293)
    THEN (294)
    LEFT (295)
    RIGHT (296)
    ELSIF (297)
    ENDIF (298)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    function (50)
        on left: 1
        on right: 0
    function_header <rval> (51)
        on left: 2
        on right: 1
    type <rval> (52)
        on left: 3 4 5
        on right: 2 8 9
    optional_variable <rval> (53)
        on left: 6 7
        on right: 1
    variable <rval> (54)
        on left: 8 9
        on right: 6
    list <rval> (55)
        on left: 10
        on right: 9
    expressions <rval> (56)
        on left: 11 12
        on right: 10 11
    body <rval> (57)
        on left: 13
        on right: 1
    statement_ <rval> (58)
        on left: 14 15 16
        on right: 13 15
    statement <rval> (59)
        on left: 17 18 19
        on right: 14 15 19 22
    cases <rval> (60)
        on left: 20 21
        on right: 19 20
    case <rval> (61)
        on left: 22
        on right: 20
    condition <rval> (62)
        on left: 23 24
        on right: 18 23 25
    relation <rval> (63)
        on left: 25 26
        on right: 23 24
    expression <rval> (64)
        on left: 27 28
        on right: 8 11 12 17 18 19 26 27 31 36
    term <rval> (65)
        on left: 29 30
        on right: 27 28 29
    primary <rval> (66)
        on left: 31 32 33 34 35 36 37
        on right: 29 30


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body ';'

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 variable: IDENTIFIER • ':' type IS expression ';'
    9         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    6 optional_variable: variable •

    $default  reduce using rule 6 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 16


State 10

    8 variable: IDENTIFIER ':' • type IS expression ';'
    9         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    LIST       shift, and go to state 17
    REAL       shift, and go to state 15

    type  go to state 18


State 11

   13 body: BEGIN_ • statement_ END

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement_  go to state 28
    statement   go to state 29
    expression  go to state 30
    term        go to state 31
    primary     go to state 32


State 12

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 33


State 13

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 14

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 15

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 34


State 17

    9 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 35


State 18

    8 variable: IDENTIFIER ':' type • IS expression ';'

    IS  shift, and go to state 36


State 19

   16 statement_: error • ';'

    ';'  shift, and go to state 37


State 20

   36 primary: IDENTIFIER • '(' expression ')'
   37        | IDENTIFIER •

    '('  shift, and go to state 38

    $default  reduce using rule 37 (primary)


State 21

   32 primary: INT_LITERAL •

    $default  reduce using rule 32 (primary)


State 22

   35 primary: HEX_LITERAL •

    $default  reduce using rule 35 (primary)


State 23

   34 primary: REAL_LITERAL •

    $default  reduce using rule 34 (primary)


State 24

   33 primary: CHAR_LITERAL •

    $default  reduce using rule 33 (primary)


State 25

   19 statement: SWITCH • expression IS cases OTHERS ARROW statement ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 39
    term        go to state 31
    primary     go to state 32


State 26

   18 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 40

    condition   go to state 41
    relation    go to state 42
    expression  go to state 43
    term        go to state 31
    primary     go to state 32


State 27

   31 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 44
    term        go to state 31
    primary     go to state 32


State 28

   13 body: BEGIN_ statement_ • END
   15 statement_: statement_ • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    END           shift, and go to state 45
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 46
    expression  go to state 30
    term        go to state 31
    primary     go to state 32


State 29

   14 statement_: statement • ';'

    ';'  shift, and go to state 47


State 30

   17 statement: expression •
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 17 (statement)


State 31

   28 expression: term •
   29 term: term • MULOP primary

    MULOP  shift, and go to state 49

    $default  reduce using rule 28 (expression)


State 32

   30 term: primary •

    $default  reduce using rule 30 (term)


State 33

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 34

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 35

    9 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 13
    INTEGER    shift, and go to state 14
    REAL       shift, and go to state 15

    type  go to state 50


State 36

    8 variable: IDENTIFIER ':' type IS • expression ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 51
    term        go to state 31
    primary     go to state 32


State 37

   16 statement_: error ';' •

    $default  reduce using rule 16 (statement_)


State 38

   36 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 52
    term        go to state 31
    primary     go to state 32


State 39

   19 statement: SWITCH expression • IS cases OTHERS ARROW statement ENDSWITCH
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    IS     shift, and go to state 53


State 40

   25 relation: '(' • condition ')'
   31 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 40

    condition   go to state 54
    relation    go to state 42
    expression  go to state 55
    term        go to state 31
    primary     go to state 32


State 41

   18 statement: WHEN condition • ',' expression ':' expression
   23 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 56
    ','    shift, and go to state 57


State 42

   24 condition: relation •

    $default  reduce using rule 24 (condition)


State 43

   26 relation: expression • RELOP expression
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    RELOP  shift, and go to state 58


State 44

   27 expression: expression • ADDOP term
   31 primary: '(' expression • ')'

    ADDOP  shift, and go to state 48
    ')'    shift, and go to state 59


State 45

   13 body: BEGIN_ statement_ END •

    $default  reduce using rule 13 (body)


State 46

   15 statement_: statement_ statement • ';'

    ';'  shift, and go to state 60


State 47

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 48

   27 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    term     go to state 61
    primary  go to state 32


State 49

   29 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    primary  go to state 62


State 50

    9 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 63


State 51

    8 variable: IDENTIFIER ':' type IS expression • ';'
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    ';'    shift, and go to state 64


State 52

   27 expression: expression • ADDOP term
   36 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 48
    ')'    shift, and go to state 65


State 53

   19 statement: SWITCH expression IS • cases OTHERS ARROW statement ENDSWITCH

    $default  reduce using rule 21 (cases)

    cases  go to state 66


State 54

   23 condition: condition • ANDOP relation
   25 relation: '(' condition • ')'

    ANDOP  shift, and go to state 56
    ')'    shift, and go to state 67


State 55

   26 relation: expression • RELOP expression
   27 expression: expression • ADDOP term
   31 primary: '(' expression • ')'

    ADDOP  shift, and go to state 48
    RELOP  shift, and go to state 58
    ')'    shift, and go to state 59


State 56

   23 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 40

    relation    go to state 68
    expression  go to state 43
    term        go to state 31
    primary     go to state 32


State 57

   18 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 69
    term        go to state 31
    primary     go to state 32


State 58

   26 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 70
    term        go to state 31
    primary     go to state 32


State 59

   31 primary: '(' expression ')' •

    $default  reduce using rule 31 (primary)


State 60

   15 statement_: statement_ statement ';' •

    $default  reduce using rule 15 (statement_)


State 61

   27 expression: expression ADDOP term •
   29 term: term • MULOP primary

    MULOP  shift, and go to state 49

    $default  reduce using rule 27 (expression)


State 62

   29 term: term MULOP primary •

    $default  reduce using rule 29 (term)


State 63

    9 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 71

    list  go to state 72


State 64

    8 variable: IDENTIFIER ':' type IS expression ';' •

    $default  reduce using rule 8 (variable)


State 65

   36 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 36 (primary)


State 66

   19 statement: SWITCH expression IS cases • OTHERS ARROW statement ENDSWITCH
   20 cases: cases • case

    CASE    shift, and go to state 73
    OTHERS  shift, and go to state 74

    case  go to state 75


State 67

   25 relation: '(' condition ')' •

    $default  reduce using rule 25 (relation)


State 68

   23 condition: condition ANDOP relation •

    $default  reduce using rule 23 (condition)


State 69

   18 statement: WHEN condition ',' expression • ':' expression
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48
    ':'    shift, and go to state 76


State 70

   26 relation: expression RELOP expression •
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 26 (relation)


State 71

   10 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expressions  go to state 77
    expression   go to state 78
    term         go to state 31
    primary      go to state 32


State 72

    9 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 79


State 73

   22 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 80


State 74

   19 statement: SWITCH expression IS cases OTHERS • ARROW statement ENDSWITCH

    ARROW  shift, and go to state 81


State 75

   20 cases: cases case •

    $default  reduce using rule 20 (cases)


State 76

   18 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 82
    term        go to state 31
    primary     go to state 32


State 77

   10 list: '(' expressions • ')'
   11 expressions: expressions • ',' expression

    ')'  shift, and go to state 83
    ','  shift, and go to state 84


State 78

   12 expressions: expression •
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 12 (expressions)


State 79

    9 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 9 (variable)


State 80

   22 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 85


State 81

   19 statement: SWITCH expression IS cases OTHERS ARROW • statement ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 86
    expression  go to state 30
    term        go to state 31
    primary     go to state 32


State 82

   18 statement: WHEN condition ',' expression ':' expression •
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 18 (statement)


State 83

   10 list: '(' expressions ')' •

    $default  reduce using rule 10 (list)


State 84

   11 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    '('           shift, and go to state 27

    expression  go to state 87
    term        go to state 31
    primary     go to state 32


State 85

   22 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    HEX_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    CHAR_LITERAL  shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    '('           shift, and go to state 27

    statement   go to state 88
    expression  go to state 30
    term        go to state 31
    primary     go to state 32


State 86

   19 statement: SWITCH expression IS cases OTHERS ARROW statement • ENDSWITCH

    ENDSWITCH  shift, and go to state 89


State 87

   11 expressions: expressions ',' expression •
   27 expression: expression • ADDOP term

    ADDOP  shift, and go to state 48

    $default  reduce using rule 11 (expressions)


State 88

   22 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 90


State 89

   19 statement: SWITCH expression IS cases OTHERS ARROW statement ENDSWITCH •

    $default  reduce using rule 19 (statement)


State 90

   22 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 22 (case)
